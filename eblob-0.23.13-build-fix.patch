From 80e5b878baabb736031a66de52f8afb1abb73091 Mon Sep 17 00:00:00 2001
From: Evgeniy Polyakov <zbr@ioremap.net>
Date: Fri, 27 Jan 2017 17:11:51 +0300
Subject: [PATCH] Fixed i386 compilation warnings and errors

---
 library/blob.c        |  4 ++--
 library/footer.cpp    |  4 ++--
 library/index.c       | 23 +++++++++++++++--------
 library/json_stat.cpp |  8 ++++----
 library/mobjects.c    |  4 ++--
 5 files changed, 25 insertions(+), 18 deletions(-)

diff --git a/library/blob.c b/library/blob.c
index 5f2befd..f02311c 100644
--- a/library/blob.c
+++ b/library/blob.c
@@ -1356,7 +1356,7 @@ static inline uint64_t eblob_calculate_size(struct eblob_backend *b, struct eblo
 	const uint64_t total_size = hdr_size + data_size + footer_size;
 
 	eblob_log(b->cfg.log, EBLOB_LOG_DEBUG, "blob: %s: %s: offset: %" PRIu64 ", size: %" PRIu64 ", "
-	          "hdr_size: %lu, data_size: %" PRIu64 ", footer_size: %" PRIu64 ", total_size: %" PRIu64 "\n",
+	          "hdr_size: %zd, data_size: %" PRIu64 ", footer_size: %" PRIu64 ", total_size: %" PRIu64 "\n",
 	          eblob_dump_id(key->id), __func__, offset, size, hdr_size, data_size, footer_size, total_size);
 
 	return total_size;
@@ -2880,7 +2880,7 @@ int eblob_periodic(struct eblob_backend *b)
 
 	pthread_mutex_lock(&b->periodic_lock);
 
-	if (t > b->stat_file_time + b->cfg.periodic_timeout) {
+	if (t > b->stat_file_time + (time_t)b->cfg.periodic_timeout) {
 		err = eblob_stat_commit(b);
 		if (err != 0) {
 			EBLOB_WARNC(b->cfg.log, EBLOB_LOG_ERROR, -err,
diff --git a/library/footer.cpp b/library/footer.cpp
index 9926291..44eabe2 100644
--- a/library/footer.cpp
+++ b/library/footer.cpp
@@ -260,7 +260,7 @@ static int eblob_verify_mmhash(struct eblob_backend *b, struct eblob_key *key, s
 
 	if (memcmp(calc_footers.data(), check_footers.data(), footers_size)) {
 		eblob_log(b->cfg.log, EBLOB_LOG_DEBUG, "blob i%d: %s: %s: checksum mismatch: footers_size: %" PRIu64
-		          ", footers_count: %" PRIu64"\n",
+		          ", footers_count: %zd\n",
 		          wc->index, eblob_dump_id(key->id), __func__, footers_size, calc_footers.size());
 		return -EILSEQ;
 	}
@@ -323,7 +323,7 @@ int eblob_commit_footer(struct eblob_backend *b, struct eblob_key *key, struct e
 	err = __eblob_write_ll(wc->data_fd, checksums.data(), checksums_size, checksums_offset);
 	if (err) {
 		eblob_log(b->cfg.log, EBLOB_LOG_ERROR, "blob i%d: %s: %s: failed to write checksums: "
-		          "fd: %d, size: %" PRIu64 ", offset: %" PRIu64 ": %d\n",
+		          "fd: %d, size: %zd, offset: %" PRIu64 ": %d\n",
 		          wc->index, eblob_dump_id(key->id), __func__,
 		          wc->data_fd, checksums_size, checksums_offset, err);
 		return err;
diff --git a/library/index.c b/library/index.c
index 66c67b9..3f73c1a 100644
--- a/library/index.c
+++ b/library/index.c
@@ -421,9 +421,12 @@ static int eblob_find_on_disk(struct eblob_backend *b,
 	read_err = __eblob_read_ll(bctl->index_ctl.fd, hdr_block, hdr_block_size, hdr_block_offset);
 	if (read_err < 0) {
 		err = read_err;
-		eblob_log(b->cfg.log, EBLOB_LOG_ERROR, "%s: index: %d, position: %" PRIu64 ", block_size: %zu, blob_size: %zd, num: %zu, FAILED: %s: %d.\n",
+		eblob_log(b->cfg.log, EBLOB_LOG_ERROR, "%s: index: %d, position: %" PRIu64
+				", block_size: %zu, blob_size: %" PRIu64
+				", num: %zu, FAILED: %s: %d.\n",
 			  eblob_dump_id(dc->key.id),
-			  bctl->index_ctl.fd, hdr_block_offset, hdr_block_size, bctl->index_ctl.size, num, strerror(-err), err);
+			  bctl->index_ctl.fd, hdr_block_offset, hdr_block_size,
+			  bctl->index_ctl.size, num, strerror(-err), err);
 		goto err_out_free_index;
 	}
 
@@ -432,7 +435,7 @@ static int eblob_find_on_disk(struct eblob_backend *b,
 
 	sorted_orig = bsearch(dc, search_start, num, sizeof(struct eblob_disk_control), eblob_disk_control_sort);
 
-	eblob_log(b->cfg.log, EBLOB_LOG_SPAM, "%s: position: %" PRIu64 ", block_size: %zu, index_size: %zd, num: %zu\n",
+	eblob_log(b->cfg.log, EBLOB_LOG_SPAM, "%s: position: %" PRIu64 ", block_size: %" PRIu64 ", index_size: %zd, num: %zu\n",
 			eblob_dump_id(dc->key.id),
 			hdr_block_offset, hdr_block_size, bctl->index_ctl.size, num);
 
@@ -479,9 +482,11 @@ static int eblob_find_on_disk(struct eblob_backend *b,
 			read_err = __eblob_read_ll(bctl->index_ctl.fd, hdr_block, hdr_block_size, hdr_block_offset);
 			if (read_err < 0) {
 				err = read_err;
-				eblob_log(b->cfg.log, EBLOB_LOG_ERROR, "%s: index: %d, position: %" PRIu64 ", block_size: %zu, blob_size: %zd, num: %zu, FAILED: %s: %d.\n",
+				eblob_log(b->cfg.log, EBLOB_LOG_ERROR, "%s: index: %d, position: %" PRIu64
+						", block_size: %" PRIu64 ", blob_size: %zd, num: %zu, FAILED: %s: %d.\n",
 					  eblob_dump_id(dc->key.id),
-					  bctl->index_ctl.fd, hdr_block_offset, hdr_block_size, bctl->index_ctl.size, num, strerror(-err), err);
+					  bctl->index_ctl.fd, hdr_block_offset, hdr_block_size,
+					  bctl->index_ctl.size, num, strerror(-err), err);
 				break;
 			}
 		}
@@ -526,9 +531,11 @@ static int eblob_find_on_disk(struct eblob_backend *b,
 		read_err = __eblob_read_ll(bctl->index_ctl.fd, hdr_block, hdr_block_size, hdr_block_offset);
 		if (read_err < 0) {
 			err = read_err;
-			eblob_log(b->cfg.log, EBLOB_LOG_ERROR, "%s: index: %d, position: %" PRIu64 ", block_size: %zu, blob_size: %zd, num: %zu, FAILED: %s: %d.\n",
+			eblob_log(b->cfg.log, EBLOB_LOG_ERROR, "%s: index: %d, position: %" PRIu64
+					", block_size: %" PRIu64 ", blob_size: %zd, num: %zu, FAILED: %s: %d.\n",
 				  eblob_dump_id(dc->key.id),
-				  bctl->index_ctl.fd, hdr_block_offset, hdr_block_size, bctl->index_ctl.size, num, strerror(-err), err);
+				  bctl->index_ctl.fd, hdr_block_offset, hdr_block_size,
+				  bctl->index_ctl.size, num, strerror(-err), err);
 			break;
 		}
 
@@ -871,7 +878,7 @@ int eblob_generate_sorted_index(struct eblob_backend *b, struct eblob_base_ctl *
 	pthread_mutex_unlock(&bctl->lock);
 	pthread_mutex_unlock(&b->lock);
 err_out_stop_binlog:
-	eblob_binlog_stop(&bctl->binlog);
+	(void)eblob_binlog_stop(&bctl->binlog);
 err_out_free_index:
 	free(sorted_index);
 err_out_close:
diff --git a/library/json_stat.cpp b/library/json_stat.cpp
index b5d006d..0d314d9 100644
--- a/library/json_stat.cpp
+++ b/library/json_stat.cpp
@@ -25,8 +25,8 @@ struct json_stat_cache {
 
 static void eblob_stat_add_timestamp_raw(rapidjson::Value &stat, const char *name, timeval &tv, rapidjson::Document::AllocatorType &allocator) {
 	rapidjson::Value timestamp(rapidjson::kObjectType);
-	timestamp.AddMember("tv_sec", tv.tv_sec, allocator);
-	timestamp.AddMember("tv_usec", tv.tv_usec, allocator);
+	timestamp.AddMember("tv_sec", (uint64_t)tv.tv_sec, allocator);
+	timestamp.AddMember("tv_usec", (uint64_t)tv.tv_usec, allocator);
 	stat.AddMember(name, allocator, timestamp, allocator);
 }
 
@@ -206,7 +206,7 @@ static void eblob_stat_vfs(struct eblob_backend *b, rapidjson::Value &stat, rapi
 		return;
 	}
 
-	stat.AddMember("bsize", s.f_bsize, allocator);
+	stat.AddMember("bsize", (uint64_t)s.f_bsize, allocator);
 	stat.AddMember("frsize", s.f_frsize, allocator);
 	stat.AddMember("blocks", s.f_blocks, allocator);
 	stat.AddMember("bfree", s.f_bfree, allocator);
@@ -298,7 +298,7 @@ int eblob_json_commit(struct eblob_backend *b) {
 /*
  * calculates lifetime_limit in usecs as doubled periodic timeout
  */
-static uint32_t get_lifetime_limit(struct eblob_backend *b) {
+static long get_lifetime_limit(struct eblob_backend *b) {
 	return b->cfg.periodic_timeout * 2 * 1000000;
 }
 
diff --git a/library/mobjects.c b/library/mobjects.c
index 509aea8..8dfc296 100644
--- a/library/mobjects.c
+++ b/library/mobjects.c
@@ -678,7 +678,7 @@ int eblob_cache_lookup(struct eblob_backend *b, struct eblob_key *key,
 {
 	int err = 1, disk = 0;
 
-	FORMATTED(HANDY_TIMER_START, ("eblob.%u.cache.lookup", b->cfg.stat_id), (uint64_t)key);
+	FORMATTED(HANDY_TIMER_START, ("eblob.%u.cache.lookup", b->cfg.stat_id), (unsigned long)key);
 	pthread_rwlock_rdlock(&b->hash.root_lock);
 	if (b->cfg.blob_flags & EBLOB_L2HASH) {
 		/* If l2hash is enabled - look in it */
@@ -688,7 +688,7 @@ int eblob_cache_lookup(struct eblob_backend *b, struct eblob_key *key,
 		err = eblob_hash_lookup_nolock(&b->hash, key, res);
 	}
 	pthread_rwlock_unlock(&b->hash.root_lock);
-	FORMATTED(HANDY_TIMER_STOP, ("eblob.%u.cache.lookup", b->cfg.stat_id), (uint64_t)key);
+	FORMATTED(HANDY_TIMER_STOP, ("eblob.%u.cache.lookup", b->cfg.stat_id), (unsigned long)key);
 
 	if (err == -ENOENT) {
 		/* Look on disk */
